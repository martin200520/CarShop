@using CarShop.Data.Entities
@model Car

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<form method="post" asp-action="Create" class="needs-validation" novalidate>
    <div class="form-row">
        <div class="col-md-4 mb-3">
            <label for="validationCustom01">Brand</label>
            <input asp-for="@Model.Brand" type="text" class="form-control" id="validationCustom01" placeholder="Car's brand" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <label for="validationCustom02">Model</label>
            <input asp-for="@Model.Model" type="text" class="form-control" id="validationCustom02" placeholder="Car's model" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-3 mb-3">
            <label for="validationCustom03">Year</label>
            <input asp-for="@Model.Year" type="number" class="form-control" id="validationCustom03" placeholder="Year"  required>
            <div class="invalid-feedback">
                Please provide a valid year.
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustom04">Horsepower</label>
            <input asp-for="@Model.HorsePower" type="number" class="form-control" id="validationCustom04" placeholder="Car's hp" required>
            <div class="invalid-feedback">
                Please provide a valid number.
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustom05">Price</label>
            <input asp-for="@Model.Price" type="number" class="form-control" id="validationCustom05" placeholder="Price" required>
            <div class="invalid-feedback">
                Please provide a valid number.
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
            <label class="form-check-label" for="invalidCheck">
                Agree to terms and conditions
            </label>
            <div class="invalid-feedback">
                You must agree before submitting.
            </div><br />
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Submit form</button>
</form>

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
